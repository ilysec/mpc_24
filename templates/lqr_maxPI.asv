%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright (c) 2024, Amon Lahr, Simon Muntwiler, Antoine Leeman & Fabian Fl√ºrenbrock Institute for Dynamic Systems and Control, ETH Zurich.
%
% All rights reserved.
%
% Please see the LICENSE file that has been included as part of this package.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [H, h] = lqr_maxPI(Q, R, params)

    % Extract system matrices and constraints from params
    A = params.model.A;
    B = params.model.B;
    Hu = params.constraints.InputMatrix;
    hu = params.constraints.InputRHS;
    Hx = params.constraints.StateMatrix;
    hx = params.constraints.StateRHS;
   
    [K, ~, ~] = lqr(A, B, Q, R);

    nx = size(A, 1); 
    nu = size(B, 2); 

    sys = LTISystem('A', A, 'B', B);
    
    sys.x.min = -hx(1:nx); 
    sys.x.max = hx(1:nx); 
    sys.u.min = -hu(1:nu);
    sys.u.max = hu(1:nu);  
    
    InvSet = sys.invariantSet();

    H = InvSet.A;
    h = InvSet.b;

end

